{"version":3,"sources":["webpack:///./src/components/Swiper/index.vue?1721","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///src/components/Swiper/index.vue","webpack:///./src/components/Swiper/index.vue?1a27","webpack:///./src/components/Swiper/index.vue","webpack:///./src/components/Swiper/index.vue?1bd7"],"names":["Swipervue_type_template_id_6ff0a0d0_lang_pug_render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","_l","x","index","key","on","click","$event","href","$router","openPage","attrs","src","alt","staticRenderFns","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","offset","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isSafari","ua","toLowerCase","isIE","isEdge","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","animating","swiper_esm_bundle_transition","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","myswiper","swiper_esm_bundle","Swipervue_type_script_lang_js_","list","default","mounted","$refs","watch","components_Swipervue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_sass___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_9_oneOf_1_0_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_sass___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-4d216186.a8da9312.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"swiper\",staticClass:\"swiper-container vue-swiper\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.list),function(x,index){return _c('div',{key:index,staticClass:\"swiper-slide\"},[_c('a',{on:{\"click\":function($event){x.href ? _vm.$router.openPage(x.href) : ''}}},[_c('img',{attrs:{\"src\":x.src,\"alt\":x.alt || 'img'+index}})])])}),0),_c('div',{ref:\"pagination\",staticClass:\"swiper-pagination\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","<template lang=\"pug\">\r\n    .swiper-container.vue-swiper(ref='swiper')\r\n        .swiper-wrapper\r\n            .swiper-slide(v-for='(x, index) in list', :key='index')\r\n                a(@click=\"x.href ? $router.openPage(x.href) : ''\")\r\n                    img(:src='x.src', :alt=\"x.alt || 'img'+index\")\r\n        .swiper-pagination(ref='pagination')\r\n</template>\r\n\r\n<script>\r\n  import Swiper from 'swiper'\r\n\r\n  let myswiper\r\n  export default {\r\n    name: 'swiper',\r\n    props: {\r\n      list: {\r\n        type: Array,\r\n        default: function () {\r\n          return []\r\n        }\r\n      },\r\n    },\r\n    data() {\r\n      return {}\r\n    },\r\n    mounted() {\r\n      myswiper = new Swiper(this.$refs.swiper, {\r\n          pagination: {\r\n            el: this.$refs.pagination,\r\n          },\r\n          autoplay: {\r\n            delay: 5000,\r\n            disableOnInteraction: false,\r\n          },\r\n          observer: true,  // observes mutations\r\n        }\r\n      )\r\n    },\r\n    watch: {\r\n      list() {\r\n        setTimeout(function () {\r\n          myswiper.update();\r\n        }, 10)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"sass\">\r\n    @import \"../../../node_modules/swiper/dist/css/swiper.min.css\"\r\n\r\n    .vue-swiper\r\n        .swiper-pagination-bullet, .swiper-pagination-white .swiper-pagination-bullet-active\r\n            background-color white\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6ff0a0d0&lang=pug&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=sass&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=sass&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=sass&\""],"sourceRoot":""}